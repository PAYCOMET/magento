<?php
$standard = Mage::getSingleton('paytpvcom/standard');
$integration = $standard->getConfigData('integration');
$paytpviframe_height = $standard->getConfigData('paytpviframe_height');
?>

<section id="banner">

  <div class="paytpv_wrapper mobile">
    <div class="operation_data">
      <div class="pad">
        <h2><?php echo $this->__('Credit Card Operation') ?></h2>
        <div style="display:inline-table;">
          <div class="operation">
              <p class="ref_num"><?php echo $this->__('Order') ?>:<span><b><?php echo $order_id; ?></b></span></p>
              <h3 class="cost_num"><?php echo $this->__('Total Amount') ?>:<b><?php echo $total_amount; ?><?php echo $currency_symbol; ?> <?php echo $base_amount;?></b></h3>
          </div>
        </div>
      </div>
      <div class="info_paytpv">
        <h4><?php echo $this->__( 'The input data is stored on servers in PAYCOMET company with PCI / DSS Level 1 certification, making payments 100% secure.' ) ?></h4>
      </div>
    </div>

    <div class="operation_card">
    <div class="paytpv_jet">

    <?php
    // BANKSTORE IFRAME/XML
    if ($integration!=1):?>
      
        <h4 class="title"><?php echo $this->__('Enter your card'); ?></h4>
        <iframe title="titulo" src="<?php echo $iframeUrl; ?>" id="iframe_paytpv" frameborder="0" height="<?php print $paytpviframe_height;?>" sandbox="allow-top-navigation allow-scripts allow-same-origin allow-forms">
        </iframe>
    <?php      // BANKSTORE JET/XML
    elseif ($integration==1):?>
        <form name="paytpvPaymentForm" id="paytpvPaymentForm" method="POST" action="<?php print $this->getUrl("paytpvcom/standard/bkjet");?>" onsubmit="return MakePayment();">
   
        <h4><?php echo $this->__('Enter your card'); ?></h4>
        <ul>
            <li>
                <label for="MERCHANT_PAN"><?php echo $this->__('Credit Card Number') ?>:</label>
                <input type="text" data-paytpv="paNumber" width="360" maxlength="16" value="" required="required" placeholder="1234 5678 9012 3456" pattern="[0-9]{15,16}" onclick="this.value='';">
            </li>
            <li class="vertical">
                <ul>
                    <li>
                        <label for="expiry_date"><?php echo $this->__('Expiration') ?></label>
                        <input maxlength="5" placeholder="<?php echo $this->__('mm/yy') ?>" id="expiry_date" required="required" pattern="[0-9]{2}/+[0-9]{2}" type="text" onChange="buildED();">
                        <input type="hidden" data-paytpv="dateMonth" maxlength="2"  value="">
                        <input type="hidden" data-paytpv="dateYear" maxlength="2" value="">
                    </li>
                    <li>
                        <label for="MERCHANT_CVC2"><?php echo $this->__('CVV') ?></label>
                        <input type="text" data-paytpv="cvc2" maxlength="4" value="" required="required" placeholder="123" pattern="[0-9]{3,4}" onclick="this.value='';">
            
                    </li>
                    <small class="help"><?php echo $this->__('The CVV is a numerical code, usually 3 digits behind the card') ?>.</small>
                </ul>
            </li>
            
            <li>
                <label for="Nombre"><?php echo $this->__('Name on Card') ?>:</label>
                <input type="text" class="paytpv_cardholdername" data-paytpv="cardHolderName" width="360" maxlength="50" value="" required="required" placeholder="<?php echo $this->__('Name on Card') ?>" onclick="this.value='';">
            </li>

            <li>
              <input type="submit" class="button" value="<?php echo $this->__('Make Payment') ?>" id="btnforg" style="" onclick="buildED();">
              <div class="button" id="clockwait" style="display:none;"><img src="<?php echo $this->getSkinUrl('images/paytpvcom/loader.gif') ?>" title="<?php echo $this->__('Wait');?>" /></div>
            </li>

            <span style="color:red;font-weight:bold;" id="paymentErrorMsg"></span>
            <input type="hidden" name="payment[paytpvToken]" id="paytpvToken">
        </ul>
        </form>
      
  
        <script type="text/javascript">
        //<![CDATA[
        <?php 
        include("paytpv/Minifier.php");

        $js_code = "
            (function() {
                (function() {
                    var $,
                    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

                    $ = " . '$jq' . ";

        " . '$jq' . ".fn.validateCreditCard = function(callback, options) {
            var bind, card, card_type, card_types, get_card_type, is_valid_length, is_valid_luhn, normalize, validate, validate_number, _i, _len, _ref;
            card_types = [
          {
            name: 'amex',
            pattern: /^3[47]/,
            valid_length: [15]
          }, {
            name: 'diners_club_carte_blanche',
            pattern: /^30[0-5]/,
            valid_length: [14]
          }, {
            name: 'diners_club_international',
            pattern: /^36/,
            valid_length: [14]
          }, {
            name: 'jcb',
            pattern: /^35(2[89]|[3-8][0-9])/,
            valid_length: [16]
          }, {
            name: 'laser',
            pattern: /^(6304|670[69]|6771)/,
            valid_length: [16, 17, 18, 19]
          }, {
            name: 'visa_electron',
            pattern: /^(4026|417500|4508|4844|491(3|7))/,
            valid_length: [16]
          }, {
            name: 'visa',
            pattern: /^4/,
            valid_length: [16]
          }, {
            name: 'mastercard',
            // 20160603 2U7-GQS-M6X3 Cambiamos el patern ya que MC ha incluido nuevos rangos de bines
            pattern: /^(5[1-5]|222|2[3-6]|27[0-1]|2720)/,
            // 20160603 2U7-GQS-M6X3 Fin
            valid_length: [16]
          }, {
            name: 'maestro',
            pattern: /^(5018|5020|5038|6304|6759|676[1-3])/,
            valid_length: [12, 13, 14, 15, 16, 17, 18, 19]
          }, {
            name: 'discover',
            pattern: /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,
            valid_length: [16]
          }
        ];
        bind = false;
        if (callback) {
          if (typeof callback === 'object') {
            options = callback;
            bind = false;
            callback = null;
          } else if (typeof callback === 'function') {
            bind = true;
          }
        }
        if (options === null) {
          options = {};
        }
        if (options.accept === null) {
          options.accept = (function() {
            var _i, _len, _results;
            _results = [];
            for (_i = 0, _len = card_types.length; _i < _len; _i++) {
              card = card_types[_i];
              _results.push(card.name);
            }
            return _results;
          })();
        }
        _ref = options.accept;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          card_type = _ref[_i];
          if (__indexOf.call((function() {
            var _j, _len1, _results;
            _results = [];
            for (_j = 0, _len1 = card_types.length; _j < _len1; _j++) {
              card = card_types[_j];
              _results.push(card.name);
            }
            return _results;
          })(), card_type) < 0) {
            throw 'Tarjeta no vÃ¡lida';
          }
        }
        get_card_type = function(number) {
          var _j, _len1, _ref1;
          _ref1 = (function() {
            var _k, _len1, _ref1, _results;
            _results = [];
            for (_k = 0, _len1 = card_types.length; _k < _len1; _k++) {
              card = card_types[_k];
              if (_ref1 = card.name, __indexOf.call(options.accept, _ref1) >= 0) {
                _results.push(card);
              }
            }
            return _results;
          })();
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            card_type = _ref1[_j];
            if (number.match(card_type.pattern)) {
              return card_type;
            }
          }
          return null;
        };
        is_valid_luhn = function(number) {
          var digit, n, sum, _j, _len1, _ref1;
          sum = 0;
          _ref1 = number.split('').reverse();
          for (n = _j = 0, _len1 = _ref1.length; _j < _len1; n = ++_j) {
            digit = _ref1[n];
            digit = +digit;
            if (n % 2) {
              digit *= 2;
              if (digit < 10) {
                sum += digit;
              } else {
                sum += digit - 9;
              }
            } else {
              sum += digit;
            }
          }
          return sum % 10 === 0;
        };
        is_valid_length = function(number, card_type) {
          var _ref1;
          return _ref1 = number.length, __indexOf.call(card_type.valid_length, _ref1) >= 0;
        };
        validate_number = (function(_this) {
          return function(number) {
            var length_valid, luhn_valid;
            card_type = get_card_type(number);
            luhn_valid = false;
            length_valid = false;
            if (card_type !== null) {
              luhn_valid = is_valid_luhn(number);
              length_valid = is_valid_length(number, card_type);
            }
            return {
              card_type: card_type,
              valid: luhn_valid && length_valid,
              luhn_valid: luhn_valid,
              length_valid: length_valid
            };
          };
        })(this);
        validate = (function(_this) {
          return function() {
            var number;
            
            number = normalize(_this.val());
            return validate_number(number);
          };
        })(this);
        normalize = function(number) {
          return number.replace(/[ -]/g, '');
        };
        if (!bind) {
          return validate();
        }
        this.on('input.jccv', (function(_this) {
          return function() {
            " . '$jq' . "(_this).off('keyup.jccv');
            return callback.call(_this, validate());
          };
        })(this));
        this.on('keyup.jccv', (function(_this) {
          return function() {
            return callback.call(_this, validate());
          };
        })(this));
          callback.call(this, validate());
          return this;
        };

        }).call(this);
            " . '$jq' . "(function() {
                return " . '$jq' . "('[data-paytpv=\'paNumber\']').validateCreditCard(function(result) {
                " . '$jq' . "(this).removeClass().addClass('paytpv_merchant_pan');
                    if (result.card_type === null) {
                        return;
                    }
                    " . '$jq' . "(this).addClass(result.card_type.name);
                    if (result.valid) {
                        return " . '$jq' . "(this).addClass('valid');
                    } else {
                        return " . '$jq' . "(this).removeClass('valid');
                    }
                }, {
                accept: ['visa', 'visa_electron', 'mastercard', 'maestro', 'discover', 'amex']
                });
            });
        }).call(this);

        buildED = function() {
            var strED = document.getElementById('expiry_date').value;

            var mm = strED.substr(0, 2);
            var yy = strED.substr(3, 2);
            " . '$jq' . "('[data-paytpv=\'dateMonth\']').val(mm), " . '$jq' . "('[data-paytpv=\'dateYear\']').val(yy)
            return;
        }


        function getParameterByName(name, url) {
            if (!url) url = document.location.href;
            url = url.toLowerCase();
            name = name.replace(/[\[\]]/g, '\\$&').toLowerCase();
            var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
            results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, ' '));
        }

        " . '$jq' . "(document).ready(function($) {

            //createJetForm(0); // Create Jet Form
            jQuery.getScript('https://secure.paytpv.com/gateway/jet_paytpv_js.php?id=" . $standard->getConfigData('jetid') . "&language=" . $standard->calcLanguage(Mage::app()->getLocale()->getLocaleCode()) ."');

            " . '$jq' . "('#expiry_date').on('input',function(){
                var curLength = " . '$jq' . "(this).val().length;
                if(curLength === 2){
                    var newInput = " . '$jq' . "(this).val();
                    newInput += '/';
                    " . '$jq' . "(this).val(newInput);
                }
            });
       
        });

        function Verify(name, len) {
          try {
            var obj = " . '$jq' . "('[data-paytpv=\''+name+'\']');
            
            if(obj.val() == '' || obj.val() == 'Incompleto')
            {
              obj.css('border','1px solid #d99785');
              obj.val('Incompleto');
              return 0;
            }

            if(obj.val().length < len)
            {
              obj.css('border','1px solid #d99785');
              obj.onclick = '';
              return 0;
            }

            obj.css('border','1px solid #e0e0e0');
            return 1;
          }catch(err) {
            
            alert ('No es posible verificar la informaciÃ³n');
            return false;
          }
        }

        function checkForm(){
          if (Verify('cardHolderName') + Verify('paNumber', 14) + Verify('cvc2', 3) != 3)
              return false;
        
            if (checkCard( " . '$jq' . "('[data-paytpv=\'paNumber\']').val()) == false) {
              " . '$jq' . "('[data-paytpv=\'paNumber\']').css('border','1px solid #d99785');
              
              return false;
            }
            
            if (" . '$jq' . "('expiry_date').val()) { // Existe en el dom, con lo cual es un template fs. Hay que validarlo.
              var objED = $('expiry_date');
              var objVal = objED.val();
              var mmPart = objVal.substr(0,2);
              var yyPart = objVal.substr(3,2);
              var dateNow = new Date();
              var yearNow = dateNow.getFullYear().toString();
              var yearNow2 = yearNow.substr(2,2);

              if (parseInt(mmPart) < 0 || parseInt(mmPart) > 12) {
                objED.css('border','1px solid #d99785');
                return false;
              }

              if (parseInt(yyPart) < parseInt(yearNow2) || parseInt(yyPart) > parseInt(yearNow2)+10) {
                objED.css('border','1px solid #d99785');
                return false;
              }
            }
            return true;
        }


        function checkCard(".'$card'."){
           var c = ".'$card'.";
           var cl = parseInt(c.substr(c.length - 1));
           var c = c.slice(0,-1)
           var c = c.split('').reverse().join('');
           var c = c.split('');
           var a = 2;
           var cm = [];
           for (var i = 0; i < c.length; i++){
           if (a%2 == 0){var t = c[i]*2;
           if (t > 9){var t = (t -9);}
               cm.push(t);
           } else {cm.push(parseInt(c[i]));}
               a++;
           }
           var f = 0;
           for (var i = 0; i < cm.length; i++) {f += cm[i];}
           f = f + cl;
           if (f%10 == 0) {
               return true;
          } else {
              return false;
          }
        }

        
        function MakePayment(){
            resp = checkForm();
            if (!resp)  return;
            
            buildED(); // set Jet Form Values
            takingOff();
            if (boarding_error==0){
              ShowHidePaymentButton(false);
              " . '$jq' . ".post( " . '$jq' . "('#paytpvPaymentForm').attr('action'), " . '$jq' . "('#paytpvPaymentForm').serialize(), function( data ) {
                  if (data.error==0){
                    window.location.href = data.url;
                    ShowHidePaymentButton(true);
                  }else{
                    ShowHidePaymentButton(true);
                    " . '$jq' . "('.paymentError').show();
                    document.getElementById('paymentErrorMsg').innerHTML = data.errorText;
                  }
              },'json');
            }
        }

        function ShowHidePaymentButton(show){
          
          if (show){
            " . '$jq' . "('#clockwait').hide('fast');
            " . '$jq' . "('#btnforg').show('fast');
          }else{
            " . '$jq' . "('#btnforg').hide('fast');
            " . '$jq' . "('#clockwait').show('fast');
          }
        }
        ";
        
        print Minifier::minify($js_code);
      ?>
      //]]>
      </script>
<?php endif; ?>
      
      <div id="storingStep" style="margin:0px 20px 10px;" class="alert alert-info">
        <input type="checkbox" name="payment[remember]" id="remember" class="input-checkbox" style="width:auto;margin-right:5px;" <?php print $remember;?>> <?php print $this->__('Yes, remember my card accepting ');?><a class="open_conditions" href="#conditions"><?php print $this->__('terms and conditions of service');?></a>.
      </div>

    </div>
    </div>
  </div>
</section>

<footer>
  <div class="paytpv_wrapper mobile">
    <div class="footer_line">
      <div class="footer_logo">
        <a href="https://secure.paytpv.com/" target="_blank">
          <img src="<?php echo $this->getSkinUrl('images/paytpvcom/paytpv_logo.svg') ?>">
        </a>
      </div>
      <ul class="payment_icons">
        <li><img src="<?php echo $this->getSkinUrl('images/paytpvcom/visa.png') ?>" alt="Visa"></li>
        <li><img src="<?php echo $this->getSkinUrl('images/paytpvcom/visa_electron.png') ?>" alt="Visa Electron"></li>
        <li><img src="<?php echo $this->getSkinUrl('images/paytpvcom/mastercard.png') ?>" alt="Mastercard"></li>
        <li><img src="<?php echo $this->getSkinUrl('images/paytpvcom/maestro.png') ?>" alt="Maestro"></li>
        <li><img src="<?php echo $this->getSkinUrl('images/paytpvcom/amex.png') ?>" alt="American Express"></li>
        <li><img src="<?php echo $this->getSkinUrl('images/paytpvcom/jcb.png') ?>" alt="JCB card"></li>
        <li><img src="<?php echo $this->getSkinUrl('images/paytpvcom/veryfied_by_visa.png') ?>" alt="Veryfied by Visa"></li>
        <li><img src="<?php echo $this->getSkinUrl('images/paytpvcom/mastercard_secure_code.png') ?>" alt="Mastercard Secure code"></li>
        <li><img src="<?php echo $this->getSkinUrl('images/paytpvcom/pci.png') ?>" alt="PCI"></li>
        <li><img src="<?php echo $this->getSkinUrl('images/paytpvcom/thawte.png') ?>" alt="Thawte"></li>
      </ul>
    </div>
  </div>
</footer>

<input type="hidden" name="base_url" id="base_url" value="<?php print Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB,array('_secure'=>true));?>">

<input type="hidden" name="conditions_url" id="conditions_url" value="<?php print $this->getUrl('paytpvcom/standard/conditions');?>">

<input type="hidden" name="actions_url" id="actions_url" value="<?php print $this->getUrl('paytpvcom/standard/actions');?>">

<input type="hidden" name="order_id" id="order_id" value="<?php echo $order_id;?>">

